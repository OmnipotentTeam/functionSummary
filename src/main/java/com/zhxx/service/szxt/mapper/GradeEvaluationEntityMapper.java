package com.zhxx.service.szxt.mapper;

import com.zhxx.service.szxt.entity.GradeEvaluationEntity;
import com.zhxx.service.szxt.entity.MarkEntity;
import com.zhxx.service.szxt.entity.ProblemEntity;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.stereotype.Repository;

import java.util.Date;
import java.util.List;

@Mapper
@Repository
public interface GradeEvaluationEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String gradeEvaluationId);

    int deleteGradeEvaluationDraft(String gradeEvaluationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    int insert(GradeEvaluationEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    int insertSelective(GradeEvaluationEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    GradeEvaluationEntity selectByPrimaryKey(String gradeEvaluationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(GradeEvaluationEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade_evaluation
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(GradeEvaluationEntity record);

    List<ProblemEntity> problemAndSolutionStudent(GradeEvaluationEntity record);


    GradeEvaluationEntity markStudentSeequestionId(String questionId);

    List<GradeEvaluationEntity> selectVague(GradeEvaluationEntity gradeEvaluationEntity);

    List<MarkEntity> selectQuestionAnswer(String gradeEvaluationId);

    List<GradeEvaluationEntity> selectUnpublished(GradeEvaluationEntity gradeEvaluationEntity);

    int updateStatus(GradeEvaluationEntity gradeEvaluationEntity);

    List<GradeEvaluationEntity> selectQuestion(int grade);

    GradeEvaluationEntity selectQuestion(String questionId);

    List<GradeEvaluationEntity> selectGradeEvaluationAll(int grade);
}